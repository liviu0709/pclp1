Task 1:
Pentru implentarea functiei de flip horizontal, definim mai intai o functie pentru interschimbarea pixelilor. 
Apoi o folosim pe aceasta pentru a inversa fiecare linie de pixeli (primul cu ultimul, al doilea cu penultimul etc).

Task 2:
Dimensiunile pozei se schimba intre ele. Astfel, trb sa definim o functie pentru a aloca memorie pt o alta imagine.
Dupa ce alocam memorie pentru poza rotita, punem in aceasta elementele. Se observa ca poza este rotita, dar in oglinda.
Pentru rezolvarea acestui fapt, am folosit functia de flip orizontal.
Pentru a rezolva memory leakurile care ar aparea pe valgrind, definim o functie pentru eliberarea memoriei.

Task 3:
Dimensiunile imaginii se schimba, deci folosim functia de alocare definita mai sus. 
In continuare, parcurgem fiecare pixel care trebuia inclus in noua imagine si il punem in imaginea noua.
Pentru a rezolva memory leakurile care ar aparea pe valgrind, folosim functia de eliberare a memoriei definita mai sus.

Task 4:
Dimensiunile imaginii se schimba, deci folosim functia de alocare definita mai sus.
In continuare, parcurgem imaginea primita pentru a copia pixelii in imaginea noua.
Umplem pixelii ramasi cu culoarea primita ca parametru.
Pentru a rezolva memory leakurile care ar aparea pe valgrind, folosim functia de eliberare a memoriei definita mai sus.

Task 5:
Luam pe rand fiecare pixel care trb modificat din imaginea destinatie si ii atribuim valoarea pixelului corespunzator din imaginea sursa.
Daca se ajunge la marginea imaginii destinatie, ne oprim.

Task 6:
Avand in vedere ca nu se poate lucra pe aceeasi imagine, deoarece modificarea unui pixel ar afecta si urmatoarea modificare, alocam memorie pentru o noua imagine.
Luam pe rand fiecare pixel din imagine si ii aplicam filtrul dat. Daca se ajunge la marginea imaginii, in calculul pixelilor, ignoram pixelii din afara.
Verificam ca valoarea culorilor sa fie intre 0 si 255. Daca nu este, o modificam.
Ultimul pas este sa eliberam memoria alocata pentru imaginea initiala si sa returnam imaginea modificata.

Task 7:
Pentru a rezolva acest task, folosim toate functiile definite la taskurile anterioare. 
Ca idee de rezolvare, folosim un switch pentru fiecare caz in care trebuie aplicata o functie.
In plus, vom folosi vectori de imagini si filtre alocate dinamic pentru a salva imaginile si filtrele. 
Acestea vor functiona ca un fel de stiva, astfel incat sa putem reveni la o imagine anterioara.
Pentru a rezolva memory leakurile care ar aparea pe valgrind, folosim functia de dezalocare definita mai sus si eliberam toata memoria folosita.